# .github/workflows/cd.yml
name: 'CD Pipeline'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'
      - '.github/workflows/cd.yml'

jobs:
  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Required for AWS Academy
          aws-region: us-east-1
          mask-aws-account-id: true
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"
          terraform_wrapper: false
          
      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      # Agregamos un paso para verificar la duración de las credenciales
      - name: Check AWS Session
        run: |
          # Intenta una operación AWS simple para verificar las credenciales
          aws sts get-caller-identity || {
            echo "⚠️ AWS credentials might have expired. Remember AWS Academy sessions are temporary"
            exit 1
          }

      - name: Update Deployment Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const status = ${{ job.status }};
            const message = status === 'success' 
              ? '✅ Deployment successful' 
              : '❌ Deployment failed - Check if AWS Academy session is still valid';
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              commit_sha: context.sha,
              body: message
            });